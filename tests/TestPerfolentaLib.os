#Использовать perfolenta

//текст скрипта на Перфоленте, который мы откомпилируем и запустим на лету 

Скрипт = "
|Программа ЗапускКода
|    
|    //---------------------------
|    Функция Старт(чис тип Объект) тип Строка
|
|       ВыводСтроки ТипЗнчСтр(чис)
|
|       Если чис ЭтоТип Число
|           ВыводСтроки чис
|       ИначеЕсли чис ЭтоТип Строка
|           ВыводСтроки чис
|       Иначе
|           чис.Добавить(444)
|           Для Об Из чис
|               ВыводСтроки """"+Об+""  ""+ТипЗнчСтр(Об)
|           КонецЦикла   
|           Перем ч1 тип Число = чис[0]
|           ВыводСтроки ""ч1=""+ч1
|           ВыводСтроки ""чис[0]=""+чис[0]
|           ВыводСтроки чис.Количество
|       КонецЕсли
|        
|       Возврат ""ОК! Выполнено!!!""
|
|    КонецФункции
|    
|    
|КонецПрограммы 
|    
|    
|&ВидноВсем Класс Котик    
|    
|    //---------------------------
|    &ВидноВсем Функция Мяу() тип Строка
|       Возврат ""МЯУ!!!""
|    КонецФункции
|    
|КонецКласса    
|    
|";

//создадим массив из нескольких параметров
Мас=Новый Массив;
Мас.Добавить(333);
Мас.Добавить("Привет!!!");

//************************************************
// проверка метода КомпилироватьИВыполнить 

//создадим объект предоставляющий доступ к компилятору языка Перфолента
П = Новый Перфолента;

//проверка передачи массива
Попытка
    Сообщить("1: "+П.КомпилироватьИВыполнить(Скрипт,Мас));
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;

//проверка передачи числа
Попытка
    Сообщить("2: "+П.КомпилироватьИВыполнить(Скрипт,999));
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;

//проверка передачи строк
Попытка
    Сообщить("3: "+П.КомпилироватьИВыполнить(Скрипт,"Строковый параметр."));
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;

//************************************************************************
// проверка последовательного вызова методов Компилировать и Выполнить  

П = Новый Перфолента;
П.Текст = Скрипт;
Попытка
    П.Компилировать("ЗапускКода"); //указываем имя модуля Программа, если оно задано в скрипте...
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;
П.Текст = ""; // чтобы текст скрипта не висел в памяти, можно его после компиляции стереть
Попытка
    Сообщить("4: "+П.Выполнить(999));
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;


//************************************************************************
// подключим откомпилированный скрипт как внешнюю компоненту
// создадим объект класса Котик и вызовем метод Мяу
Скрипт = "
|&ВидноВсем Класс Котик    
|    &ВидноВсем Свойство Имя тип Строка = ""Безымянный""
|    //---------------------------
|    &ВидноВсем Функция Мяу() тип Строка
|       Возврат ""МЯУ!!!""
|    КонецФункции
|    
|КонецКласса    
|";

П.Текст = Скрипт;
Попытка
    П.Компилировать(); 
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;

Попытка
    П.ПодключитьКакВнешнююКомпоненту();
    Котик = Новый COMОбъект("Котик");
    Сообщить("Было имя: "+Котик.Имя);
    Котик.Имя="Васька";
    Сообщить("Стало имя: "+Котик.Имя);
    Сообщить(Котик.Мяу());
Исключение
    Сообщить("Ошибка: "+ОписаниеОшибки());
КонецПопытки;


Сообщить("ГОТОВО...");
Консоль.ПрочитатьСтроку();
